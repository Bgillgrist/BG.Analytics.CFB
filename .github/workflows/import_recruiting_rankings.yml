name: Import Recruiting Rankings (manual)

on:
  workflow_dispatch:
    inputs:
      year:
        description: "Season year (e.g., 2026)"
        required: true
        type: number
      path:
        description: "Optional CSV path (defaults to data/recruiting/<year>.csv)"
        required: false
        type: string
        default: ""

jobs:
  import-recruiting-rankings:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg[binary]

      - name: Import recruiting rankings CSV
        env:
          PG_DSN: ${{ secrets.PG_DSN }}
          INPUT_YEAR: ${{ github.event.inputs.year }}
          INPUT_PATH: ${{ github.event.inputs.path }}
        run: |
          python - <<'PY'
          import os, sys, psycopg

          year = int(os.environ["INPUT_YEAR"])
          path = os.environ.get("INPUT_PATH") or f"data/recruiting/{year}.csv"

          if not os.path.exists(path):
            sys.exit(f"❌ CSV not found at: {path}\nCommit the file to the repo or provide a full path via the 'path' input.")

          copy_sql = """
          COPY public.team_recruiting_rankings (year, team, rank, points)
          FROM STDIN WITH (
            FORMAT CSV,
            HEADER TRUE,
            DELIMITER ',',
            NULL '',
            FORCE_NULL (year, rank, points)
          )
          """

          print(f"📄 Using CSV: {path}")
          with psycopg.connect(os.environ["PG_DSN"]) as conn, conn.cursor() as cur:
              # Delete target year first
              cur.execute("DELETE FROM public.team_recruiting_rankings WHERE year = %s;", (year,))
              print(f"🗑️  Deleted existing rows for year {year}")

              # Bulk COPY
              with open(path, "rb") as f, cur.copy(copy_sql) as cp:
                  for chunk in iter(lambda: f.read(1024 * 1024), b""):
                      cp.write(chunk)
              conn.commit()

              # Verify
              cur.execute("SELECT COUNT(*) FROM public.team_recruiting_rankings WHERE year = %s;", (year,))
              cnt = cur.fetchone()[0]
              print(f"✅ Inserted {cnt} rows for {year}")
          PY
